<?xml version="1.0" encoding="UTF-8"?>  
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/task   
            http://www.springframework.org/schema/task/spring-task-3.2.xsd
        http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    
    <!--
        Don't map these static resources to handlers, just serve them directly.
     -->
    <mvc:resources mapping="/**.html" location="*.html" />
    <mvc:default-servlet-handler />
    
    <!-- Tells Spring to do automatic handling of multipart requests. -->
    <bean
        id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        
        <!--
            The maximum allowed size for an upload is 5 MB. Feel free to update
            this as you please.
         -->
        <property name="maxUploadSize" value="5242880" />
    </bean>

    <!-- Loads the configuration file. -->
    <bean
        id="configurationFileImport"
        class="org.openmhealth.reference.listener.ConfigurationFileImport"
        init-method="init"/>

    <!--
        Sets up the connection to the database. This must come after the
        configuration file import listener.
     -->
    <bean
        id="databaseSetup"
        class="org.openmhealth.reference.listener.DatabaseSetup"
        init-method="init" 
        destroy-method="destroy"/>

    <bean
        id="fatSecretShim"
        class="org.openmhealth.shim.FatSecretShimRegistry"
        init-method="init"/>

    <bean
        id="fitbitShim"
        class="org.openmhealth.shim.fitbit.FitbitShimRegistry"
        init-method="init"/>

    <bean
        id="movesShim"
        class="org.openmhealth.shim.MovesShimRegistry"
        init-method="init"/>

    <bean
        id="runkeeperShim"
        class="org.openmhealth.shim.RunkeeperShimRegistry"
        init-method="init"/>

    <bean
        id="twoNetShim"
        class="org.openmhealth.shim.twonet.TwoNetShimRegistry"
        init-method="init"/>

    <bean
        id="withingsShim"
        class="org.openmhealth.shim.withings.WithingsShimRegistry"
        init-method="init"/>

    <!-- Use annotations. -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean
                class="org.springframework.http.converter.StringHttpMessageConverter">
            </bean>

            <!-- Use Jackson 2 to (de)serialize objects. -->
            <bean
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">

                <property name="objectMapper">
                    <bean class="org.openmhealth.reference.util.OmhObjectMapper" />
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
        
    <!--
        Tell Spring where to scan for annotations that link HTTP paths to their
        handlers.
     -->
    <context:component-scan base-package="org.openmhealth" />
    
    <task:annotation-driven />
    <bean 
        id="dpuScheduledRunner" 
        class="org.openmhealth.reference.dpu.ScheduledRunner" />
</beans>